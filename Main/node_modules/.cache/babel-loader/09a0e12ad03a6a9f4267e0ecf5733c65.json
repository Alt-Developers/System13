{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jirat Chutrakul\\\\Documents\\\\GitHub\\\\System13\\\\Main\\\\src\\\\components\\\\System13\\\\Logic.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\"; // import { FullNamesList, playerList } from \"./Constants\";\n\nimport Modal from \"../Layout/Modal.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logic = props => {\n  _s();\n\n  const playerInpRef1 = useRef(\"\");\n  const playerInpRef2 = useRef(\"\");\n  const playerInpRef3 = useRef(\"\");\n  const playerInpRef4 = useRef(\"\");\n  const playerInpRef5 = useRef(\"\");\n  const playerInpRef6 = useRef(\"\");\n  const playerInpRef7 = useRef(\"\");\n  const playerInpRef8 = useRef(\"\");\n  const playerInpRef9 = useRef(\"\");\n  const playerInpRef10 = useRef(\"\");\n  const [modalVisible, setModalVisible] = useState(true);\n  const [modalText, setModalText] = useState(\"default\");\n  const [modalError, setModalError] = useState(false);\n  const [playerNamesData, setPlayerNamesData] = useState();\n  const [playerScoreData, setPlayerScoreData] = useState();\n\n  const display = (resultArr, score) => {\n    const newScore = [];\n    const reactFormatArr = []; // Old format to [\"John Doe\", 3] format\n\n    score.forEach((_, i) => {\n      newScore.push(...score[i]);\n    }); // Changes codenames to full names\n\n    resultArr.forEach((result, i) => {\n      const fullName = playerScoreData.hasOwnProperty(result) ? playerNamesData[result] : result;\n      reactFormatArr.push([fullName, newScore[i]]);\n    });\n    const teamPlayerAmount = reactFormatArr.length / 2;\n    const atkFreshResults = reactFormatArr.slice(0, teamPlayerAmount);\n    const defFreshResults = reactFormatArr.slice(teamPlayerAmount); // Lifts processed results to System13 component\n\n    props.liftResults(atkFreshResults, defFreshResults);\n  };\n\n  const checkScore = function (arr) {\n    const calc = [];\n    const playerPerTeam = arr.length / 2;\n    arr.forEach(cur => {\n      calc.push(playerScoreData[cur]);\n    });\n    const attackers = calc.slice(0, playerPerTeam);\n    const defenders = calc.slice(playerPerTeam);\n    const attackerScore = attackers.reduce((acc, cur) => acc + cur);\n    const defenderScore = defenders.reduce((acc, cur) => acc + cur);\n\n    if (attackerScore === defenderScore) {\n      return [attackers, defenders];\n    } else {\n      return false;\n    }\n  };\n\n  const endl = () => {\n    console.log(\"--------------------------------\");\n  };\n\n  const boldEndl = () => {\n    console.warn(\"============================\");\n  };\n\n  const checkForImpossible = arr => {\n    console.log(\"Checking if team is possible ---\");\n    const calc = [];\n    arr.forEach(function (cur, i) {\n      calc.push(playerScoreData[cur]);\n    }); // Does player exist?\n\n    let err3 = false;\n    calc.forEach(cur => {\n      if (cur === undefined) {\n        console.log(\"‚ùå : This player doesn't exist\");\n        err3 = \"err3\";\n      } else {\n        console.log(\"‚úÖ : This player exist\");\n      }\n    });\n\n    if (err3) {\n      endl();\n      console.info(\"üóÇ : Troubleshooted Code [err3]\");\n      return \"err3\";\n    } // Are players odd?\n\n\n    if (calc.length % 2 === 0) {\n      console.log(\"‚úÖ : Players amount aren't odd\");\n    } else {\n      console.log(\"‚ùå : Players amount are odd\");\n      endl();\n      console.info(\"üóÇ : Troubleshooted Code [err0]\");\n      return \"err0\";\n    } // Are tier scores odd?\n\n\n    if (calc.reduce((acc, cur) => acc + cur) % 2 === 0) {\n      console.log(\"‚úÖ : Tiers add up to even\");\n    } else {\n      console.log(\"‚ùå : Tiers add up to odd\");\n      endl();\n      console.info(\"üóÇ : Troubleshooted Code [err1]\");\n      return \"err1\";\n    }\n\n    const scoreExisted = [];\n    const timesExisted = [];\n    let err4 = false;\n    scoreExisted.push(calc[0]);\n    timesExisted.push([calc[0], 0]);\n    calc.forEach(score => {\n      if (scoreExisted.includes(score)) {\n        let whereExisted = scoreExisted.indexOf(score);\n        timesExisted[whereExisted][1]++;\n      } else {\n        scoreExisted.push(score);\n        timesExisted.push([score, 1]);\n      }\n    });\n    timesExisted.forEach(existed => {\n      if (existed[1] % 2 !== 0) {\n        console.log(\"‚ùå : Odd amount of tier(s)\");\n        console.info(\"üóÇ : Troubleshooted Code [err4]\");\n        err4 = true;\n      } else {\n        console.log(\"‚úÖ : Even amount of tier(s)\");\n      }\n    });\n    if (err4) return \"err4\";\n\n    if (calc.length === 2) {\n      // 2 players are not a match\n      if (calc[0] !== calc[1]) {\n        console.log(\"‚ùå : 2 players are not a match\");\n        endl();\n        console.info(\"üóÇ : Troubleshooted Code [err2]\");\n        return \"err2\";\n      } else {\n        console.log(\"‚úÖ : These 2 players are a match\");\n      }\n    } else {\n      console.log(\"üîé : There's more than 2 players\");\n    }\n\n    console.info(\"‚úÖ : Passed all tests!\");\n    endl();\n  };\n\n  const randomizer = function (array) {\n    let currentIndex = array.length,\n        randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  };\n\n  const main = function (players) {\n    let finishedEqualling = false;\n    let timesEqualized = 0;\n    let processingPlayers;\n    let checkForError = checkForImpossible(players);\n\n    if (checkForError === \"err1\") {\n      setModalText(\"err1\");\n      setModalVisible(true);\n      return false;\n    } else if (checkForError === \"err2\") {\n      setModalText(\"err2\");\n      setModalVisible(true);\n      return false;\n    } else if (checkForError === \"err0\") {\n      setModalText(\"err0\");\n      setModalVisible(true);\n      return false;\n    } else if (checkForError === \"err3\") {\n      setModalText(\"err3\");\n      setModalVisible(true);\n      return false;\n    } else if (checkForError === \"err4\") {\n      setModalText(\"err4\");\n      setModalVisible(true);\n      return false;\n    }\n\n    while (finishedEqualling === false && timesEqualized <= 200) {\n      processingPlayers = randomizer(players);\n      finishedEqualling = checkScore(processingPlayers);\n      timesEqualized++;\n    }\n\n    console.info(`Found a perfect team with ${timesEqualized} ${timesEqualized === 1 ? \"iteration\" : \"iterations\"}.`);\n    display(processingPlayers, finishedEqualling);\n  };\n\n  const startSystem = event => {\n    event.preventDefault();\n    console.clear();\n    boldEndl();\n    const players = [playerInpRef1.current.value, playerInpRef2.current.value, playerInpRef3.current.value, playerInpRef4.current.value, playerInpRef5.current.value, playerInpRef6.current.value, playerInpRef7.current.value, playerInpRef8.current.value, playerInpRef9.current.value, playerInpRef10.current.value].filter(player => player !== \"\").map(player => player.trim().replaceAll(\" \", \"\").toUpperCase().slice(0, 3));\n\n    if (players.length === 0) {\n      setModalText({\n        modalH: \"No players?\",\n        modalP: \"System13 can't randomize a team without players\",\n        modalBtn: \"Okay...\"\n      });\n      setModalVisible(true);\n    } else {\n      main(players);\n    }\n\n    boldEndl();\n  };\n\n  const liftingModalVisible = useCallback(() => {\n    setModalVisible(false);\n  }, []);\n  useEffect(() => {\n    boldEndl(); // Fetch player data\n\n    (async () => {\n      const data = await fetch(\"https://apis.ssdevelopers.xyz/system13/getRealNameList\");\n      const response = await data.json();\n      setPlayerNamesData(response.playersList);\n      console.log(\"‚úÖ : Player names data fetched\");\n    })();\n\n    (async () => {\n      const data = await fetch(\"https://apis.ssdevelopers.xyz/system13/getPlayersList\").then(response => {\n        if (response.status === 500) {\n          setModalError(true);\n          setModalText(\"500\");\n        }\n\n        return response;\n      }).catch(() => {\n        setModalError(true);\n        setModalText(\"521\");\n      });\n      const response = await data.json();\n      setPlayerScoreData(response.playersList);\n      console.log(\"‚úÖ : Player score data fetched\");\n    })();\n\n    if (playerNamesData !== \"\" && playerScoreData !== \"\") {\n      console.log(\"‚úÖ : Established connection with server\");\n    } else {\n      console.log(\"‚ùå : Connection failed\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"start__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start__text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to System13\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"To start input all players that are playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Not all fields need to be filled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"start__form\",\n      onSubmit: startSystem,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start__form--left\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player 1\",\n          ref: playerInpRef1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player 2\",\n          ref: playerInpRef2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player 3\",\n          ref: playerInpRef3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player 4\",\n          ref: playerInpRef4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player 5\",\n          ref: playerInpRef5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start__form--right\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player 6\",\n          ref: playerInpRef6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player 7\",\n          ref: playerInpRef7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player 8\",\n          ref: playerInpRef8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player 9\",\n          ref: playerInpRef9\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player 10\",\n          ref: playerInpRef10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit__form--start dark-btn btn\",\n        children: \"Start the randomization!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      liftingModalCancel: liftingModalVisible,\n      isVisible: modalVisible,\n      text: modalText,\n      errorModal: modalError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logic, \"X/vbtHBXZ06mt6A9wh9I/byBCBE=\");\n\n_c = Logic;\nexport default Logic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logic\");","map":{"version":3,"sources":["C:/Users/Jirat Chutrakul/Documents/GitHub/System13/Main/src/components/System13/Logic.jsx"],"names":["React","useState","useRef","useEffect","useCallback","Modal","Logic","props","playerInpRef1","playerInpRef2","playerInpRef3","playerInpRef4","playerInpRef5","playerInpRef6","playerInpRef7","playerInpRef8","playerInpRef9","playerInpRef10","modalVisible","setModalVisible","modalText","setModalText","modalError","setModalError","playerNamesData","setPlayerNamesData","playerScoreData","setPlayerScoreData","display","resultArr","score","newScore","reactFormatArr","forEach","_","i","push","result","fullName","hasOwnProperty","teamPlayerAmount","length","atkFreshResults","slice","defFreshResults","liftResults","checkScore","arr","calc","playerPerTeam","cur","attackers","defenders","attackerScore","reduce","acc","defenderScore","endl","console","log","boldEndl","warn","checkForImpossible","err3","undefined","info","scoreExisted","timesExisted","err4","includes","whereExisted","indexOf","existed","randomizer","array","currentIndex","randomIndex","Math","floor","random","main","players","finishedEqualling","timesEqualized","processingPlayers","checkForError","startSystem","event","preventDefault","clear","current","value","filter","player","map","trim","replaceAll","toUpperCase","modalH","modalP","modalBtn","liftingModalVisible","data","fetch","response","json","playersList","then","status","catch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,WAA7C,QAAgE,OAAhE,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,aAAa,GAAGN,MAAM,CAAC,EAAD,CAA5B;AACA,QAAMO,aAAa,GAAGP,MAAM,CAAC,EAAD,CAA5B;AACA,QAAMQ,aAAa,GAAGR,MAAM,CAAC,EAAD,CAA5B;AACA,QAAMS,aAAa,GAAGT,MAAM,CAAC,EAAD,CAA5B;AACA,QAAMU,aAAa,GAAGV,MAAM,CAAC,EAAD,CAA5B;AACA,QAAMW,aAAa,GAAGX,MAAM,CAAC,EAAD,CAA5B;AACA,QAAMY,aAAa,GAAGZ,MAAM,CAAC,EAAD,CAA5B;AACA,QAAMa,aAAa,GAAGb,MAAM,CAAC,EAAD,CAA5B;AACA,QAAMc,aAAa,GAAGd,MAAM,CAAC,EAAD,CAA5B;AACA,QAAMe,cAAc,GAAGf,MAAM,CAAC,EAAD,CAA7B;AAEA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,SAAD,CAA1C;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM,CAACuB,eAAD,EAAkBC,kBAAlB,IAAwCxB,QAAQ,EAAtD;AACA,QAAM,CAACyB,eAAD,EAAkBC,kBAAlB,IAAwC1B,QAAQ,EAAtD;;AAEA,QAAM2B,OAAO,GAAG,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACpC,UAAMC,QAAQ,GAAG,EAAjB;AACA,UAAMC,cAAc,GAAG,EAAvB,CAFoC,CAIpC;;AACAF,IAAAA,KAAK,CAACG,OAAN,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACtBJ,MAAAA,QAAQ,CAACK,IAAT,CAAc,GAAGN,KAAK,CAACK,CAAD,CAAtB;AACD,KAFD,EALoC,CAQpC;;AACAN,IAAAA,SAAS,CAACI,OAAV,CAAkB,CAACI,MAAD,EAASF,CAAT,KAAe;AAC/B,YAAMG,QAAQ,GAAGZ,eAAe,CAACa,cAAhB,CAA+BF,MAA/B,IACbb,eAAe,CAACa,MAAD,CADF,GAEbA,MAFJ;AAGAL,MAAAA,cAAc,CAACI,IAAf,CAAoB,CAACE,QAAD,EAAWP,QAAQ,CAACI,CAAD,CAAnB,CAApB;AACD,KALD;AAOA,UAAMK,gBAAgB,GAAGR,cAAc,CAACS,MAAf,GAAwB,CAAjD;AACA,UAAMC,eAAe,GAAGV,cAAc,CAACW,KAAf,CAAqB,CAArB,EAAwBH,gBAAxB,CAAxB;AACA,UAAMI,eAAe,GAAGZ,cAAc,CAACW,KAAf,CAAqBH,gBAArB,CAAxB,CAlBoC,CAoBpC;;AACAjC,IAAAA,KAAK,CAACsC,WAAN,CAAkBH,eAAlB,EAAmCE,eAAnC;AACD,GAtBD;;AAwBA,QAAME,UAAU,GAAG,UAAUC,GAAV,EAAe;AAChC,UAAMC,IAAI,GAAG,EAAb;AACA,UAAMC,aAAa,GAAGF,GAAG,CAACN,MAAJ,GAAa,CAAnC;AACAM,IAAAA,GAAG,CAACd,OAAJ,CAAaiB,GAAD,IAAS;AACnBF,MAAAA,IAAI,CAACZ,IAAL,CAAUV,eAAe,CAACwB,GAAD,CAAzB;AACD,KAFD;AAIA,UAAMC,SAAS,GAAGH,IAAI,CAACL,KAAL,CAAW,CAAX,EAAcM,aAAd,CAAlB;AACA,UAAMG,SAAS,GAAGJ,IAAI,CAACL,KAAL,CAAWM,aAAX,CAAlB;AACA,UAAMI,aAAa,GAAGF,SAAS,CAACG,MAAV,CAAiB,CAACC,GAAD,EAAML,GAAN,KAAcK,GAAG,GAAGL,GAArC,CAAtB;AACA,UAAMM,aAAa,GAAGJ,SAAS,CAACE,MAAV,CAAiB,CAACC,GAAD,EAAML,GAAN,KAAcK,GAAG,GAAGL,GAArC,CAAtB;;AACA,QAAIG,aAAa,KAAKG,aAAtB,EAAqC;AACnC,aAAO,CAACL,SAAD,EAAYC,SAAZ,CAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF,GAhBD;;AAkBA,QAAMK,IAAI,GAAG,MAAM;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,GAFD;;AAGA,QAAMC,QAAQ,GAAG,MAAM;AACrBF,IAAAA,OAAO,CAACG,IAAR,CAAa,8BAAb;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAIf,GAAD,IAAS;AAClCW,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACA,UAAMX,IAAI,GAAG,EAAb;AACAD,IAAAA,GAAG,CAACd,OAAJ,CAAY,UAAUiB,GAAV,EAAef,CAAf,EAAkB;AAC5Ba,MAAAA,IAAI,CAACZ,IAAL,CAAUV,eAAe,CAACwB,GAAD,CAAzB;AACD,KAFD,EAHkC,CAOlC;;AACA,QAAIa,IAAI,GAAG,KAAX;AACAf,IAAAA,IAAI,CAACf,OAAL,CAAciB,GAAD,IAAS;AACpB,UAAIA,GAAG,KAAKc,SAAZ,EAAuB;AACrBN,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAI,QAAAA,IAAI,GAAG,MAAP;AACD,OAHD,MAGO;AACLL,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;AACF,KAPD;;AAQA,QAAII,IAAJ,EAAU;AACRN,MAAAA,IAAI;AACJC,MAAAA,OAAO,CAACO,IAAR,CAAa,iCAAb;AACA,aAAO,MAAP;AACD,KArBiC,CAuBlC;;;AACA,QAAIjB,IAAI,CAACP,MAAL,GAAc,CAAd,KAAoB,CAAxB,EAA2B;AACzBiB,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAF,MAAAA,IAAI;AACJC,MAAAA,OAAO,CAACO,IAAR,CAAa,iCAAb;AACA,aAAO,MAAP;AACD,KA/BiC,CAiClC;;;AACA,QAAIjB,IAAI,CAACM,MAAL,CAAY,CAACC,GAAD,EAAML,GAAN,KAAcK,GAAG,GAAGL,GAAhC,IAAuC,CAAvC,KAA6C,CAAjD,EAAoD;AAClDQ,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAF,MAAAA,IAAI;AACJC,MAAAA,OAAO,CAACO,IAAR,CAAa,iCAAb;AACA,aAAO,MAAP;AACD;;AAED,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMC,YAAY,GAAG,EAArB;AACA,QAAIC,IAAI,GAAG,KAAX;AACAF,IAAAA,YAAY,CAAC9B,IAAb,CAAkBY,IAAI,CAAC,CAAD,CAAtB;AACAmB,IAAAA,YAAY,CAAC/B,IAAb,CAAkB,CAACY,IAAI,CAAC,CAAD,CAAL,EAAU,CAAV,CAAlB;AACAA,IAAAA,IAAI,CAACf,OAAL,CAAcH,KAAD,IAAW;AACtB,UAAIoC,YAAY,CAACG,QAAb,CAAsBvC,KAAtB,CAAJ,EAAkC;AAChC,YAAIwC,YAAY,GAAGJ,YAAY,CAACK,OAAb,CAAqBzC,KAArB,CAAnB;AACAqC,QAAAA,YAAY,CAACG,YAAD,CAAZ,CAA2B,CAA3B;AACD,OAHD,MAGO;AACLJ,QAAAA,YAAY,CAAC9B,IAAb,CAAkBN,KAAlB;AACAqC,QAAAA,YAAY,CAAC/B,IAAb,CAAkB,CAACN,KAAD,EAAQ,CAAR,CAAlB;AACD;AACF,KARD;AASAqC,IAAAA,YAAY,CAAClC,OAAb,CAAsBuC,OAAD,IAAa;AAChC,UAAIA,OAAO,CAAC,CAAD,CAAP,GAAa,CAAb,KAAmB,CAAvB,EAA0B;AACxBd,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,QAAAA,OAAO,CAACO,IAAR,CAAa,iCAAb;AACAG,QAAAA,IAAI,GAAG,IAAP;AACD,OAJD,MAIO;AACLV,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;AACF,KARD;AASA,QAAIS,IAAJ,EAAU,OAAO,MAAP;;AAEV,QAAIpB,IAAI,CAACP,MAAL,KAAgB,CAApB,EAAuB;AACrB;AACA,UAAIO,IAAI,CAAC,CAAD,CAAJ,KAAYA,IAAI,CAAC,CAAD,CAApB,EAAyB;AACvBU,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAF,QAAAA,IAAI;AACJC,QAAAA,OAAO,CAACO,IAAR,CAAa,iCAAb;AACA,eAAO,MAAP;AACD,OALD,MAKO;AACLP,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD;AACF,KAVD,MAUO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD;;AAEDD,IAAAA,OAAO,CAACO,IAAR,CAAa,uBAAb;AACAR,IAAAA,IAAI;AACL,GApFD;;AAsFA,QAAMgB,UAAU,GAAG,UAAUC,KAAV,EAAiB;AAClC,QAAIC,YAAY,GAAGD,KAAK,CAACjC,MAAzB;AAAA,QACEmC,WADF;;AAEA,WAAOD,YAAY,KAAK,CAAxB,EAA2B;AACzBC,MAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,YAA3B,CAAd;AACAA,MAAAA,YAAY;AACZ,OAACD,KAAK,CAACC,YAAD,CAAN,EAAsBD,KAAK,CAACE,WAAD,CAA3B,IAA4C,CAC1CF,KAAK,CAACE,WAAD,CADqC,EAE1CF,KAAK,CAACC,YAAD,CAFqC,CAA5C;AAID;;AACD,WAAOD,KAAP;AACD,GAZD;;AAcA,QAAMM,IAAI,GAAG,UAAUC,OAAV,EAAmB;AAC9B,QAAIC,iBAAiB,GAAG,KAAxB;AACA,QAAIC,cAAc,GAAG,CAArB;AACA,QAAIC,iBAAJ;AACA,QAAIC,aAAa,GAAGvB,kBAAkB,CAACmB,OAAD,CAAtC;;AAEA,QAAII,aAAa,KAAK,MAAtB,EAA8B;AAC5BhE,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACAF,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA,aAAO,KAAP;AACD,KAJD,MAIO,IAAIkE,aAAa,KAAK,MAAtB,EAA8B;AACnChE,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACAF,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA,aAAO,KAAP;AACD,KAJM,MAIA,IAAIkE,aAAa,KAAK,MAAtB,EAA8B;AACnChE,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACAF,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA,aAAO,KAAP;AACD,KAJM,MAIA,IAAIkE,aAAa,KAAK,MAAtB,EAA8B;AACnChE,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACAF,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA,aAAO,KAAP;AACD,KAJM,MAIA,IAAIkE,aAAa,KAAK,MAAtB,EAA8B;AACnChE,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACAF,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA,aAAO,KAAP;AACD;;AAED,WAAO+D,iBAAiB,KAAK,KAAtB,IAA+BC,cAAc,IAAI,GAAxD,EAA6D;AAC3DC,MAAAA,iBAAiB,GAAGX,UAAU,CAACQ,OAAD,CAA9B;AACAC,MAAAA,iBAAiB,GAAGpC,UAAU,CAACsC,iBAAD,CAA9B;AACAD,MAAAA,cAAc;AACf;;AACDzB,IAAAA,OAAO,CAACO,IAAR,CACG,6BAA4BkB,cAAe,IAC1CA,cAAc,KAAK,CAAnB,GAAuB,WAAvB,GAAqC,YACtC,GAHH;AAKAvD,IAAAA,OAAO,CAACwD,iBAAD,EAAoBF,iBAApB,CAAP;AACD,GAvCD;;AAyCA,QAAMI,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACA9B,IAAAA,OAAO,CAAC+B,KAAR;AACA7B,IAAAA,QAAQ;AACR,UAAMqB,OAAO,GAAG,CACdzE,aAAa,CAACkF,OAAd,CAAsBC,KADR,EAEdlF,aAAa,CAACiF,OAAd,CAAsBC,KAFR,EAGdjF,aAAa,CAACgF,OAAd,CAAsBC,KAHR,EAIdhF,aAAa,CAAC+E,OAAd,CAAsBC,KAJR,EAKd/E,aAAa,CAAC8E,OAAd,CAAsBC,KALR,EAMd9E,aAAa,CAAC6E,OAAd,CAAsBC,KANR,EAOd7E,aAAa,CAAC4E,OAAd,CAAsBC,KAPR,EAQd5E,aAAa,CAAC2E,OAAd,CAAsBC,KARR,EASd3E,aAAa,CAAC0E,OAAd,CAAsBC,KATR,EAUd1E,cAAc,CAACyE,OAAf,CAAuBC,KAVT,EAYbC,MAZa,CAYLC,MAAD,IAAYA,MAAM,KAAK,EAZjB,EAabC,GAba,CAaRD,MAAD,IACHA,MAAM,CAACE,IAAP,GAAcC,UAAd,CAAyB,GAAzB,EAA8B,EAA9B,EAAkCC,WAAlC,GAAgDtD,KAAhD,CAAsD,CAAtD,EAAyD,CAAzD,CAdY,CAAhB;;AAiBA,QAAIsC,OAAO,CAACxC,MAAR,KAAmB,CAAvB,EAA0B;AACxBpB,MAAAA,YAAY,CAAC;AACX6E,QAAAA,MAAM,EAAE,aADG;AAEXC,QAAAA,MAAM,EAAE,iDAFG;AAGXC,QAAAA,QAAQ,EAAE;AAHC,OAAD,CAAZ;AAKAjF,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAPD,MAOO;AACL6D,MAAAA,IAAI,CAACC,OAAD,CAAJ;AACD;;AACDrB,IAAAA,QAAQ;AACT,GAhCD;;AAkCA,QAAMyC,mBAAmB,GAAGjG,WAAW,CAAC,MAAM;AAC5Ce,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACdyD,IAAAA,QAAQ,GADM,CAEd;;AACA,KAAC,YAAY;AACX,YAAM0C,IAAI,GAAG,MAAMC,KAAK,CACtB,wDADsB,CAAxB;AAGA,YAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAvB;AACAhF,MAAAA,kBAAkB,CAAC+E,QAAQ,CAACE,WAAV,CAAlB;AACAhD,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KAPD;;AAQA,KAAC,YAAY;AACX,YAAM2C,IAAI,GAAG,MAAMC,KAAK,CACtB,uDADsB,CAAL,CAGhBI,IAHgB,CAGVH,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3BrF,UAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AACD,eAAOmF,QAAP;AACD,OATgB,EAUhBK,KAVgB,CAUV,MAAM;AACXtF,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAbgB,CAAnB;AAcA,YAAMmF,QAAQ,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAvB;AACA9E,MAAAA,kBAAkB,CAAC6E,QAAQ,CAACE,WAAV,CAAlB;AACAhD,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KAlBD;;AAoBA,QAAInC,eAAe,KAAK,EAApB,IAA0BE,eAAe,KAAK,EAAlD,EAAsD;AACpDgC,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;AACF,GApCQ,EAoCN,EApCM,CAAT;AAsCA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAE2B,WAAxC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,UAA/B;AAA0C,UAAA,GAAG,EAAE9E;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,UAA/B;AAA0C,UAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,UAA/B;AAA0C,UAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,UAA/B;AAA0C,UAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,UAA/B;AAA0C,UAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,UAA/B;AAA0C,UAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,UAA/B;AAA0C,UAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,UAA/B;AAA0C,UAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,UAA/B;AAA0C,UAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,WAA/B;AAA2C,UAAA,GAAG,EAAEC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,kCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eA0BE,QAAC,KAAD;AACE,MAAA,kBAAkB,EAAEoF,mBADtB;AAEE,MAAA,SAAS,EAAEnF,YAFb;AAGE,MAAA,IAAI,EAAEE,SAHR;AAIE,MAAA,UAAU,EAAEE;AAJd;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAhUD;;GAAMhB,K;;KAAAA,K;AAkUN,eAAeA,KAAf","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\n\r\n// import { FullNamesList, playerList } from \"./Constants\";\r\nimport Modal from \"../Layout/Modal.jsx\";\r\n\r\nconst Logic = (props) => {\r\n  const playerInpRef1 = useRef(\"\");\r\n  const playerInpRef2 = useRef(\"\");\r\n  const playerInpRef3 = useRef(\"\");\r\n  const playerInpRef4 = useRef(\"\");\r\n  const playerInpRef5 = useRef(\"\");\r\n  const playerInpRef6 = useRef(\"\");\r\n  const playerInpRef7 = useRef(\"\");\r\n  const playerInpRef8 = useRef(\"\");\r\n  const playerInpRef9 = useRef(\"\");\r\n  const playerInpRef10 = useRef(\"\");\r\n\r\n  const [modalVisible, setModalVisible] = useState(true);\r\n  const [modalText, setModalText] = useState(\"default\");\r\n  const [modalError, setModalError] = useState(false);\r\n\r\n  const [playerNamesData, setPlayerNamesData] = useState();\r\n  const [playerScoreData, setPlayerScoreData] = useState();\r\n\r\n  const display = (resultArr, score) => {\r\n    const newScore = [];\r\n    const reactFormatArr = [];\r\n\r\n    // Old format to [\"John Doe\", 3] format\r\n    score.forEach((_, i) => {\r\n      newScore.push(...score[i]);\r\n    });\r\n    // Changes codenames to full names\r\n    resultArr.forEach((result, i) => {\r\n      const fullName = playerScoreData.hasOwnProperty(result)\r\n        ? playerNamesData[result]\r\n        : result;\r\n      reactFormatArr.push([fullName, newScore[i]]);\r\n    });\r\n\r\n    const teamPlayerAmount = reactFormatArr.length / 2;\r\n    const atkFreshResults = reactFormatArr.slice(0, teamPlayerAmount);\r\n    const defFreshResults = reactFormatArr.slice(teamPlayerAmount);\r\n\r\n    // Lifts processed results to System13 component\r\n    props.liftResults(atkFreshResults, defFreshResults);\r\n  };\r\n\r\n  const checkScore = function (arr) {\r\n    const calc = [];\r\n    const playerPerTeam = arr.length / 2;\r\n    arr.forEach((cur) => {\r\n      calc.push(playerScoreData[cur]);\r\n    });\r\n\r\n    const attackers = calc.slice(0, playerPerTeam);\r\n    const defenders = calc.slice(playerPerTeam);\r\n    const attackerScore = attackers.reduce((acc, cur) => acc + cur);\r\n    const defenderScore = defenders.reduce((acc, cur) => acc + cur);\r\n    if (attackerScore === defenderScore) {\r\n      return [attackers, defenders];\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const endl = () => {\r\n    console.log(\"--------------------------------\");\r\n  };\r\n  const boldEndl = () => {\r\n    console.warn(\"============================\");\r\n  };\r\n\r\n  const checkForImpossible = (arr) => {\r\n    console.log(\"Checking if team is possible ---\");\r\n    const calc = [];\r\n    arr.forEach(function (cur, i) {\r\n      calc.push(playerScoreData[cur]);\r\n    });\r\n\r\n    // Does player exist?\r\n    let err3 = false;\r\n    calc.forEach((cur) => {\r\n      if (cur === undefined) {\r\n        console.log(\"‚ùå : This player doesn't exist\");\r\n        err3 = \"err3\";\r\n      } else {\r\n        console.log(\"‚úÖ : This player exist\");\r\n      }\r\n    });\r\n    if (err3) {\r\n      endl();\r\n      console.info(\"üóÇ : Troubleshooted Code [err3]\");\r\n      return \"err3\";\r\n    }\r\n\r\n    // Are players odd?\r\n    if (calc.length % 2 === 0) {\r\n      console.log(\"‚úÖ : Players amount aren't odd\");\r\n    } else {\r\n      console.log(\"‚ùå : Players amount are odd\");\r\n      endl();\r\n      console.info(\"üóÇ : Troubleshooted Code [err0]\");\r\n      return \"err0\";\r\n    }\r\n\r\n    // Are tier scores odd?\r\n    if (calc.reduce((acc, cur) => acc + cur) % 2 === 0) {\r\n      console.log(\"‚úÖ : Tiers add up to even\");\r\n    } else {\r\n      console.log(\"‚ùå : Tiers add up to odd\");\r\n      endl();\r\n      console.info(\"üóÇ : Troubleshooted Code [err1]\");\r\n      return \"err1\";\r\n    }\r\n\r\n    const scoreExisted = [];\r\n    const timesExisted = [];\r\n    let err4 = false;\r\n    scoreExisted.push(calc[0]);\r\n    timesExisted.push([calc[0], 0]);\r\n    calc.forEach((score) => {\r\n      if (scoreExisted.includes(score)) {\r\n        let whereExisted = scoreExisted.indexOf(score);\r\n        timesExisted[whereExisted][1]++;\r\n      } else {\r\n        scoreExisted.push(score);\r\n        timesExisted.push([score, 1]);\r\n      }\r\n    });\r\n    timesExisted.forEach((existed) => {\r\n      if (existed[1] % 2 !== 0) {\r\n        console.log(\"‚ùå : Odd amount of tier(s)\");\r\n        console.info(\"üóÇ : Troubleshooted Code [err4]\");\r\n        err4 = true;\r\n      } else {\r\n        console.log(\"‚úÖ : Even amount of tier(s)\");\r\n      }\r\n    });\r\n    if (err4) return \"err4\";\r\n\r\n    if (calc.length === 2) {\r\n      // 2 players are not a match\r\n      if (calc[0] !== calc[1]) {\r\n        console.log(\"‚ùå : 2 players are not a match\");\r\n        endl();\r\n        console.info(\"üóÇ : Troubleshooted Code [err2]\");\r\n        return \"err2\";\r\n      } else {\r\n        console.log(\"‚úÖ : These 2 players are a match\");\r\n      }\r\n    } else {\r\n      console.log(\"üîé : There's more than 2 players\");\r\n    }\r\n\r\n    console.info(\"‚úÖ : Passed all tests!\");\r\n    endl();\r\n  };\r\n\r\n  const randomizer = function (array) {\r\n    let currentIndex = array.length,\r\n      randomIndex;\r\n    while (currentIndex !== 0) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex],\r\n      ];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const main = function (players) {\r\n    let finishedEqualling = false;\r\n    let timesEqualized = 0;\r\n    let processingPlayers;\r\n    let checkForError = checkForImpossible(players);\r\n\r\n    if (checkForError === \"err1\") {\r\n      setModalText(\"err1\");\r\n      setModalVisible(true);\r\n      return false;\r\n    } else if (checkForError === \"err2\") {\r\n      setModalText(\"err2\");\r\n      setModalVisible(true);\r\n      return false;\r\n    } else if (checkForError === \"err0\") {\r\n      setModalText(\"err0\");\r\n      setModalVisible(true);\r\n      return false;\r\n    } else if (checkForError === \"err3\") {\r\n      setModalText(\"err3\");\r\n      setModalVisible(true);\r\n      return false;\r\n    } else if (checkForError === \"err4\") {\r\n      setModalText(\"err4\");\r\n      setModalVisible(true);\r\n      return false;\r\n    }\r\n\r\n    while (finishedEqualling === false && timesEqualized <= 200) {\r\n      processingPlayers = randomizer(players);\r\n      finishedEqualling = checkScore(processingPlayers);\r\n      timesEqualized++;\r\n    }\r\n    console.info(\r\n      `Found a perfect team with ${timesEqualized} ${\r\n        timesEqualized === 1 ? \"iteration\" : \"iterations\"\r\n      }.`\r\n    );\r\n    display(processingPlayers, finishedEqualling);\r\n  };\r\n\r\n  const startSystem = (event) => {\r\n    event.preventDefault();\r\n    console.clear();\r\n    boldEndl();\r\n    const players = [\r\n      playerInpRef1.current.value,\r\n      playerInpRef2.current.value,\r\n      playerInpRef3.current.value,\r\n      playerInpRef4.current.value,\r\n      playerInpRef5.current.value,\r\n      playerInpRef6.current.value,\r\n      playerInpRef7.current.value,\r\n      playerInpRef8.current.value,\r\n      playerInpRef9.current.value,\r\n      playerInpRef10.current.value,\r\n    ]\r\n      .filter((player) => player !== \"\")\r\n      .map((player) =>\r\n        player.trim().replaceAll(\" \", \"\").toUpperCase().slice(0, 3)\r\n      );\r\n\r\n    if (players.length === 0) {\r\n      setModalText({\r\n        modalH: \"No players?\",\r\n        modalP: \"System13 can't randomize a team without players\",\r\n        modalBtn: \"Okay...\",\r\n      });\r\n      setModalVisible(true);\r\n    } else {\r\n      main(players);\r\n    }\r\n    boldEndl();\r\n  };\r\n\r\n  const liftingModalVisible = useCallback(() => {\r\n    setModalVisible(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    boldEndl();\r\n    // Fetch player data\r\n    (async () => {\r\n      const data = await fetch(\r\n        \"https://apis.ssdevelopers.xyz/system13/getRealNameList\"\r\n      );\r\n      const response = await data.json();\r\n      setPlayerNamesData(response.playersList);\r\n      console.log(\"‚úÖ : Player names data fetched\");\r\n    })();\r\n    (async () => {\r\n      const data = await fetch(\r\n        \"https://apis.ssdevelopers.xyz/system13/getPlayersList\"\r\n      )\r\n        .then((response) => {\r\n          if (response.status === 500) {\r\n            setModalError(true);\r\n            setModalText(\"500\");\r\n          }\r\n          return response;\r\n        })\r\n        .catch(() => {\r\n          setModalError(true);\r\n          setModalText(\"521\");\r\n        });\r\n      const response = await data.json();\r\n      setPlayerScoreData(response.playersList);\r\n      console.log(\"‚úÖ : Player score data fetched\");\r\n    })();\r\n\r\n    if (playerNamesData !== \"\" && playerScoreData !== \"\") {\r\n      console.log(\"‚úÖ : Established connection with server\");\r\n    } else {\r\n      console.log(\"‚ùå : Connection failed\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"start__wrapper\">\r\n      <div className=\"start__text\">\r\n        <h1>Welcome to System13</h1>\r\n        <p>To start input all players that are playing</p>\r\n        <p>Not all fields need to be filled</p>\r\n      </div>\r\n\r\n      <form className=\"start__form\" onSubmit={startSystem}>\r\n        <div className=\"start__form--left\">\r\n          <input type=\"text\" placeholder=\"Player 1\" ref={playerInpRef1} />\r\n          <input type=\"text\" placeholder=\"Player 2\" ref={playerInpRef2} />\r\n          <input type=\"text\" placeholder=\"Player 3\" ref={playerInpRef3} />\r\n          <input type=\"text\" placeholder=\"Player 4\" ref={playerInpRef4} />\r\n          <input type=\"text\" placeholder=\"Player 5\" ref={playerInpRef5} />\r\n        </div>\r\n        <div className=\"start__form--right\">\r\n          <input type=\"text\" placeholder=\"Player 6\" ref={playerInpRef6} />\r\n          <input type=\"text\" placeholder=\"Player 7\" ref={playerInpRef7} />\r\n          <input type=\"text\" placeholder=\"Player 8\" ref={playerInpRef8} />\r\n          <input type=\"text\" placeholder=\"Player 9\" ref={playerInpRef9} />\r\n          <input type=\"text\" placeholder=\"Player 10\" ref={playerInpRef10} />\r\n        </div>\r\n        <button type=\"submit\" className=\"submit__form--start dark-btn btn\">\r\n          Start the randomization!\r\n        </button>\r\n      </form>\r\n      <Modal\r\n        liftingModalCancel={liftingModalVisible}\r\n        isVisible={modalVisible}\r\n        text={modalText}\r\n        errorModal={modalError}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logic;\r\n"]},"metadata":{},"sourceType":"module"}