{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jirat Chutrakul\\\\Documents\\\\GitHub\\\\System13\\\\React\\\\src\\\\components\\\\System13\\\\Logic.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Modal from \"../Layout/Modal.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logic = props => {\n  _s();\n\n  const playerInpRef1 = useRef(\"\");\n  const playerInpRef2 = useRef(\"\");\n  const playerInpRef3 = useRef(\"\");\n  const playerInpRef4 = useRef(\"\");\n  const playerInpRef5 = useRef(\"\");\n  const playerInpRef6 = useRef(\"\");\n  const playerInpRef7 = useRef(\"\");\n  const playerInpRef8 = useRef(\"\");\n  const playerInpRef9 = useRef(\"\");\n  const playerInpRef10 = useRef(\"\");\n\n  const playerList = require(\"./Constants/playerList\");\n\n  const fullNamesList = require(\"./Constants/fullNamesList\");\n\n  const [modalVisible, setModalVisible] = useState(true);\n  const [modalText, setModalText] = useState({\n    modalH: \"Reminder\",\n    modalP: \"This program isnt perfect, this program might lag or worse crash your computer.\",\n    modalBtn: \"I Understand all of the possible consequence\"\n  });\n\n  const sort = Arr => {\n    const sortedArr = [];\n    Arr.forEach((item, i) => {\n      if (Arr[i][1] > Arr[0][i]) {\n        sortedArr.unshift([item[0], item[1]]);\n      } else {\n        sortedArr.push([item[0], item[1]]);\n      }\n    });\n    return sortedArr;\n  };\n\n  const display = (resultArr, score) => {\n    const newScore = [];\n    const reactFormatArr = []; // Old format to [\"John Doe\", 3] format\n\n    score.forEach((_, i) => {\n      newScore.push(...score[i]);\n    }); // Changes codenames to full names\n\n    resultArr.forEach((result, i) => {\n      const fullName = playerList.hasOwnProperty(result) ? fullNamesList[result] : result;\n      reactFormatArr.push([fullName, newScore[i]]);\n    });\n    const teamPlayerAmount = reactFormatArr.length / 2;\n    const atkFreshResults = reactFormatArr.slice(0, teamPlayerAmount);\n    const defFreshResults = reactFormatArr.slice(teamPlayerAmount); // Lifts processed results to System13.jsx\n\n    props.liftResults(sort(atkFreshResults), sort(defFreshResults));\n  };\n\n  const checkScore = function (arr) {\n    const calc = [];\n    const playerPerTeam = arr.length / 2;\n    arr.forEach(function (cur, i) {\n      calc.push(playerList[cur]);\n    });\n    const attackers = calc.slice(0, playerPerTeam);\n    const defenders = calc.slice(playerPerTeam);\n    const attackerScore = attackers.reduce((acc, cur) => acc + cur);\n    const defenderScore = defenders.reduce((acc, cur) => acc + cur);\n\n    if (attackerScore === defenderScore) {\n      return [attackers, defenders];\n    } else {\n      return false;\n    }\n  };\n\n  const checkForImpossible = arr => {\n    console.log(\"Checking if team is possible ---\");\n    const calc = [];\n    arr.forEach(function (cur, i) {\n      calc.push(playerList[cur]);\n    }); // Does player exist?\n\n    let err3 = false;\n    calc.forEach(cur => {\n      if (cur === undefined) {\n        console.error(\"❌ : This player doesnt exist\");\n        err3 = true;\n      } else {\n        console.log(\"✅ : This player exist\");\n      }\n    });\n\n    if (err3) {\n      return \"err3\";\n    } // Are players odd?\n\n\n    if (calc.length % 2 === 0) {\n      console.log(\"✅ : Players amount arent odd\");\n    } else {\n      console.error(\"❌ : Players amount are odd\");\n      console.log(\"--------------------------------\");\n      return \"err0\";\n    } // Are tier scores odd?\n\n\n    if (calc.reduce((acc, cur) => acc + cur) % 2 === 0) {\n      console.log(\"✅ : Tiers add up to even\");\n    } else {\n      console.error(\"❌ : Tiers add up to odd\");\n      console.log(\"--------------------------------\");\n      return \"err1\";\n    }\n\n    const checker = [];\n    calc.forEach((score, i) => {\n      checker.push(score);\n      let a = {\n        score: score,\n        qty: 1\n      };\n\n      if (checker.includes(score)) {\n        checker.find(score);\n      }\n    }); // 2 players are not a match\n\n    if (calc.length === 2 && calc[0] !== calc[1]) {\n      console.error(\"❌ : 2 players are not a match\");\n      console.log(\"--------------------------------\");\n      return \"err2\";\n    } else {\n      console.log(\"✅ : Passed all tests!\");\n    }\n\n    console.log(\"--------------------------------\");\n  };\n\n  const randomizer = function (array) {\n    let currentIndex = array.length,\n        randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  };\n\n  const main = function (players) {\n    let finishedEqulazing = false;\n    let timesEqualized = 0;\n    let processingPlayers;\n    let checkForError = checkForImpossible(players);\n\n    if (checkForError === \"err1\") {\n      setModalText({\n        modalH: \"Sum of tiers are odd\",\n        modalP: \"This team is an imposible team , please try a new team\",\n        modalBtn: \"Try agian?\"\n      });\n      setModalVisible(true);\n      return false;\n    } else if (checkForError === \"err2\") {\n      setModalText({\n        modalH: \"These 2 players are not a match\",\n        modalP: \"This team is an imposible team , please try a new team\",\n        modalBtn: \"Try agian?\"\n      });\n      setModalVisible(true);\n      return false;\n    } else if (checkForError === \"err0\") {\n      setModalText({\n        modalH: \"Odd amount of players\",\n        modalP: \"For system13 to randomize the team players needs to be even\",\n        modalBtn: \"Try agian?\"\n      });\n      setModalVisible(true);\n      return false;\n    } else if (checkForError === \"err3\") {\n      setModalText({\n        modalH: \"Player dosen't exist!\",\n        modalP: \"Seems like you mispelled or that player isnt registered in the database\",\n        modalBtn: \"Try agian?\"\n      });\n      setModalVisible(true);\n      return false;\n    }\n\n    while (finishedEqulazing === false && timesEqualized <= 200) {\n      processingPlayers = randomizer(players);\n      finishedEqulazing = checkScore(processingPlayers);\n      timesEqualized++;\n    }\n\n    console.info(`Found a perfect team with ${timesEqualized} ${timesEqualized === 1 ? \"iteration\" : \"iterations\"}.`);\n    display(processingPlayers, finishedEqulazing);\n  };\n\n  const startSystem = event => {\n    event.preventDefault();\n    const players = [playerInpRef1.current.value, playerInpRef2.current.value, playerInpRef3.current.value, playerInpRef4.current.value, playerInpRef5.current.value, playerInpRef6.current.value, playerInpRef7.current.value, playerInpRef8.current.value, playerInpRef9.current.value, playerInpRef10.current.value].filter(player => player !== \"\").map(player => player.trim().replaceAll(\" \", \"\").toUpperCase().slice(0, 3));\n\n    if (players.length === 0) {\n      setModalText({\n        modalH: \"No players?\",\n        modalP: \"System13 can't randomize a team without players\",\n        modalBtn: \"Okay...\"\n      });\n      setModalVisible(true);\n    } else {\n      main(players);\n    }\n\n    console.warn(\"============================\");\n  };\n\n  const liftingModalVisible = () => {\n    setModalVisible(false);\n  };\n\n  useEffect(() => {\n    console.warn(\"============================\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"start__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start__text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to System13\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"To start input all players that are playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Not all fields need to be filled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"start__form\",\n      onSubmit: startSystem,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start__form--left\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 1\",\n          ref: playerInpRef1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 2\",\n          ref: playerInpRef2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 3\",\n          ref: playerInpRef3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 4\",\n          ref: playerInpRef4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 5\",\n          ref: playerInpRef5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start__form--right\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 6\",\n          ref: playerInpRef6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 7\",\n          ref: playerInpRef7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 8\",\n          ref: playerInpRef8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 9\",\n          ref: playerInpRef9\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 10\",\n          ref: playerInpRef10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit__form--start dark-btn btn\",\n        children: \"Start the randomization!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      liftingModalCancle: liftingModalVisible,\n      isVisible: modalVisible,\n      modalBtn: modalText.modalBtn,\n      modalH: modalText.modalH,\n      modalP: modalText.modalP\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logic, \"6VTY2ocuSIdhZbZM0qv2DyqLfbY=\");\n\n_c = Logic;\nexport default Logic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logic\");","map":{"version":3,"sources":["C:/Users/Jirat Chutrakul/Documents/GitHub/System13/React/src/components/System13/Logic.jsx"],"names":["React","useState","useRef","useEffect","Modal","Logic","props","playerInpRef1","playerInpRef2","playerInpRef3","playerInpRef4","playerInpRef5","playerInpRef6","playerInpRef7","playerInpRef8","playerInpRef9","playerInpRef10","playerList","require","fullNamesList","modalVisible","setModalVisible","modalText","setModalText","modalH","modalP","modalBtn","sort","Arr","sortedArr","forEach","item","i","unshift","push","display","resultArr","score","newScore","reactFormatArr","_","result","fullName","hasOwnProperty","teamPlayerAmount","length","atkFreshResults","slice","defFreshResults","liftResults","checkScore","arr","calc","playerPerTeam","cur","attackers","defenders","attackerScore","reduce","acc","defenderScore","checkForImpossible","console","log","err3","undefined","error","checker","a","qty","includes","find","randomizer","array","currentIndex","randomIndex","Math","floor","random","main","players","finishedEqulazing","timesEqualized","processingPlayers","checkForError","info","startSystem","event","preventDefault","current","value","filter","player","map","trim","replaceAll","toUpperCase","warn","liftingModalVisible"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Modal from \"../Layout/Modal.jsx\";\r\n\r\nconst Logic = (props) => {\r\n  const playerInpRef1 = useRef(\"\");\r\n  const playerInpRef2 = useRef(\"\");\r\n  const playerInpRef3 = useRef(\"\");\r\n  const playerInpRef4 = useRef(\"\");\r\n  const playerInpRef5 = useRef(\"\");\r\n  const playerInpRef6 = useRef(\"\");\r\n  const playerInpRef7 = useRef(\"\");\r\n  const playerInpRef8 = useRef(\"\");\r\n  const playerInpRef9 = useRef(\"\");\r\n  const playerInpRef10 = useRef(\"\");\r\n\r\n  const playerList = require(\"./Constants/playerList\");\r\n  const fullNamesList = require(\"./Constants/fullNamesList\");\r\n\r\n  const [modalVisible, setModalVisible] = useState(true);\r\n  const [modalText, setModalText] = useState({\r\n    modalH: \"Reminder\",\r\n    modalP:\r\n      \"This program isnt perfect, this program might lag or worse crash your computer.\",\r\n    modalBtn: \"I Understand all of the possible consequence\",\r\n  });\r\n\r\n  const sort = (Arr) => {\r\n    const sortedArr = [];\r\n    Arr.forEach((item, i) => {\r\n      if (Arr[i][1] > Arr[0][i]) {\r\n        sortedArr.unshift([item[0], item[1]]);\r\n      } else {\r\n        sortedArr.push([item[0], item[1]]);\r\n      }\r\n    });\r\n    return sortedArr;\r\n  };\r\n\r\n  const display = (resultArr, score) => {\r\n    const newScore = [];\r\n    const reactFormatArr = [];\r\n\r\n    // Old format to [\"John Doe\", 3] format\r\n    score.forEach((_, i) => {\r\n      newScore.push(...score[i]);\r\n    });\r\n    // Changes codenames to full names\r\n    resultArr.forEach((result, i) => {\r\n      const fullName = playerList.hasOwnProperty(result)\r\n        ? fullNamesList[result]\r\n        : result;\r\n      reactFormatArr.push([fullName, newScore[i]]);\r\n    });\r\n\r\n    const teamPlayerAmount = reactFormatArr.length / 2;\r\n    const atkFreshResults = reactFormatArr.slice(0, teamPlayerAmount);\r\n    const defFreshResults = reactFormatArr.slice(teamPlayerAmount);\r\n\r\n    // Lifts processed results to System13.jsx\r\n    props.liftResults(sort(atkFreshResults), sort(defFreshResults));\r\n  };\r\n\r\n  const checkScore = function (arr) {\r\n    const calc = [];\r\n    const playerPerTeam = arr.length / 2;\r\n    arr.forEach(function (cur, i) {\r\n      calc.push(playerList[cur]);\r\n    });\r\n\r\n    const attackers = calc.slice(0, playerPerTeam);\r\n    const defenders = calc.slice(playerPerTeam);\r\n    const attackerScore = attackers.reduce((acc, cur) => acc + cur);\r\n    const defenderScore = defenders.reduce((acc, cur) => acc + cur);\r\n    if (attackerScore === defenderScore) {\r\n      return [attackers, defenders];\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const checkForImpossible = (arr) => {\r\n    console.log(\"Checking if team is possible ---\");\r\n    const calc = [];\r\n    arr.forEach(function (cur, i) {\r\n      calc.push(playerList[cur]);\r\n    });\r\n\r\n    // Does player exist?\r\n    let err3 = false;\r\n    calc.forEach((cur) => {\r\n      if (cur === undefined) {\r\n        console.error(\"❌ : This player doesnt exist\");\r\n        err3 = true;\r\n      } else {\r\n        console.log(\"✅ : This player exist\");\r\n      }\r\n    });\r\n    if (err3) {\r\n      return \"err3\";\r\n    }\r\n\r\n    // Are players odd?\r\n    if (calc.length % 2 === 0) {\r\n      console.log(\"✅ : Players amount arent odd\");\r\n    } else {\r\n      console.error(\"❌ : Players amount are odd\");\r\n      console.log(\"--------------------------------\");\r\n      return \"err0\";\r\n    }\r\n\r\n    // Are tier scores odd?\r\n    if (calc.reduce((acc, cur) => acc + cur) % 2 === 0) {\r\n      console.log(\"✅ : Tiers add up to even\");\r\n    } else {\r\n      console.error(\"❌ : Tiers add up to odd\");\r\n      console.log(\"--------------------------------\");\r\n      return \"err1\";\r\n    }\r\n\r\n    const checker = [];\r\n    calc.forEach((score, i) => {\r\n      checker.push(score);\r\n      let a = { score: score, qty: 1 };\r\n\r\n      if (checker.includes(score)) {\r\n        checker.find(score);\r\n      }\r\n    });\r\n\r\n    // 2 players are not a match\r\n    if (calc.length === 2 && calc[0] !== calc[1]) {\r\n      console.error(\"❌ : 2 players are not a match\");\r\n      console.log(\"--------------------------------\");\r\n      return \"err2\";\r\n    } else {\r\n      console.log(\"✅ : Passed all tests!\");\r\n    }\r\n    console.log(\"--------------------------------\");\r\n  };\r\n\r\n  const randomizer = function (array) {\r\n    let currentIndex = array.length,\r\n      randomIndex;\r\n    while (currentIndex !== 0) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex],\r\n      ];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const main = function (players) {\r\n    let finishedEqulazing = false;\r\n    let timesEqualized = 0;\r\n    let processingPlayers;\r\n    let checkForError = checkForImpossible(players);\r\n    if (checkForError === \"err1\") {\r\n      setModalText({\r\n        modalH: \"Sum of tiers are odd\",\r\n        modalP: \"This team is an imposible team , please try a new team\",\r\n        modalBtn: \"Try agian?\",\r\n      });\r\n      setModalVisible(true);\r\n      return false;\r\n    } else if (checkForError === \"err2\") {\r\n      setModalText({\r\n        modalH: \"These 2 players are not a match\",\r\n        modalP: \"This team is an imposible team , please try a new team\",\r\n        modalBtn: \"Try agian?\",\r\n      });\r\n      setModalVisible(true);\r\n      return false;\r\n    } else if (checkForError === \"err0\") {\r\n      setModalText({\r\n        modalH: \"Odd amount of players\",\r\n        modalP: \"For system13 to randomize the team players needs to be even\",\r\n        modalBtn: \"Try agian?\",\r\n      });\r\n      setModalVisible(true);\r\n      return false;\r\n    } else if (checkForError === \"err3\") {\r\n      setModalText({\r\n        modalH: \"Player dosen't exist!\",\r\n        modalP:\r\n          \"Seems like you mispelled or that player isnt registered in the database\",\r\n        modalBtn: \"Try agian?\",\r\n      });\r\n      setModalVisible(true);\r\n      return false;\r\n    }\r\n    while (finishedEqulazing === false && timesEqualized <= 200) {\r\n      processingPlayers = randomizer(players);\r\n      finishedEqulazing = checkScore(processingPlayers);\r\n      timesEqualized++;\r\n    }\r\n    console.info(\r\n      `Found a perfect team with ${timesEqualized} ${\r\n        timesEqualized === 1 ? \"iteration\" : \"iterations\"\r\n      }.`\r\n    );\r\n    display(processingPlayers, finishedEqulazing);\r\n  };\r\n\r\n  const startSystem = (event) => {\r\n    event.preventDefault();\r\n    const players = [\r\n      playerInpRef1.current.value,\r\n      playerInpRef2.current.value,\r\n      playerInpRef3.current.value,\r\n      playerInpRef4.current.value,\r\n      playerInpRef5.current.value,\r\n      playerInpRef6.current.value,\r\n      playerInpRef7.current.value,\r\n      playerInpRef8.current.value,\r\n      playerInpRef9.current.value,\r\n      playerInpRef10.current.value,\r\n    ]\r\n      .filter((player) => player !== \"\")\r\n      .map((player) =>\r\n        player.trim().replaceAll(\" \", \"\").toUpperCase().slice(0, 3)\r\n      );\r\n\r\n    if (players.length === 0) {\r\n      setModalText({\r\n        modalH: \"No players?\",\r\n        modalP: \"System13 can't randomize a team without players\",\r\n        modalBtn: \"Okay...\",\r\n      });\r\n      setModalVisible(true);\r\n    } else {\r\n      main(players);\r\n    }\r\n    console.warn(\"============================\");\r\n  };\r\n\r\n  const liftingModalVisible = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.warn(\"============================\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"start__wrapper\">\r\n      <div className=\"start__text\">\r\n        <h1>Welcome to System13</h1>\r\n        <p>To start input all players that are playing</p>\r\n        <p>Not all fields need to be filled</p>\r\n      </div>\r\n\r\n      <form className=\"start__form\" onSubmit={startSystem}>\r\n        <div className=\"start__form--left\">\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 1\"\r\n            ref={playerInpRef1}\r\n          />\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 2\"\r\n            ref={playerInpRef2}\r\n          />\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 3\"\r\n            ref={playerInpRef3}\r\n          />\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 4\"\r\n            ref={playerInpRef4}\r\n          />\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 5\"\r\n            ref={playerInpRef5}\r\n          />\r\n        </div>\r\n        <div className=\"start__form--right\">\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 6\"\r\n            ref={playerInpRef6}\r\n          />\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 7\"\r\n            ref={playerInpRef7}\r\n          />\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 8\"\r\n            ref={playerInpRef8}\r\n          />\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 9\"\r\n            ref={playerInpRef9}\r\n          />\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 10\"\r\n            ref={playerInpRef10}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"submit__form--start dark-btn btn\">\r\n          Start the randomization!\r\n        </button>\r\n      </form>\r\n      <Modal\r\n        liftingModalCancle={liftingModalVisible}\r\n        isVisible={modalVisible}\r\n        modalBtn={modalText.modalBtn}\r\n        modalH={modalText.modalH}\r\n        modalP={modalText.modalP}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logic;\r\n"]},"metadata":{},"sourceType":"module"}