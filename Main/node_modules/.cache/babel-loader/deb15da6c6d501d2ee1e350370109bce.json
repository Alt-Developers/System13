{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jirat Chutrakul\\\\Documents\\\\GitHub\\\\System13\\\\Main\\\\src\\\\components\\\\System13\\\\System13.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport Attackers from \"./Results/Attackers\";\nimport Defenders from \"./Results/Defenders\";\nimport Logic from \"./Logic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortArr = arr => {\n  const sortedArr = arr.sort((a, b) => b[1] - a[1]);\n  return sortedArr;\n};\n\nconst resultsReducer = (_, action) => {\n  switch (action.type) {\n    // If the dispatched type is Results then\n    // update the results state and displays\n    case \"RESULTS\":\n      return {\n        def: sortArr(action.def),\n        atk: sortArr(action.atk)\n      };\n\n    default:\n      return {\n        def: [[\"ERROR\", 1]],\n        atk: [[\"ERROR\", 1]]\n      };\n  }\n};\n\nconst System13 = function (props) {\n  _s();\n\n  const [resultsState, dispatchResults] = useReducer(resultsReducer, {\n    def: [[\"Jane Doe\", 2]],\n    atk: [[\"John Doe\", 3]]\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(Attackers, {\n      atkPlayers: resultsState.atk\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Defenders, {\n      defPlayers: resultsState.def\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logic // Lifts the results and dispatches to Reducer\n    , {\n      liftResults: (atk, def) => dispatchResults({\n        type: \"RESULTS\",\n        def,\n        atk\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(System13, \"7QGJOovMsvfLrdyIWM6d/Y5hQcM=\");\n\n_c = System13;\nexport default System13;\n\nvar _c;\n\n$RefreshReg$(_c, \"System13\");","map":{"version":3,"sources":["C:/Users/Jirat Chutrakul/Documents/GitHub/System13/Main/src/components/System13/System13.jsx"],"names":["React","useReducer","Attackers","Defenders","Logic","sortArr","arr","sortedArr","sort","a","b","resultsReducer","_","action","type","def","atk","System13","props","resultsState","dispatchResults"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,OAAO,GAAIC,GAAD,IAAS;AACvB,QAAMC,SAAS,GAAGD,GAAG,CAACE,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAA3B,CAAlB;AACA,SAAOF,SAAP;AACD,CAHD;;AAKA,MAAMI,cAAc,GAAG,CAACC,CAAD,EAAIC,MAAJ,KAAe;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE;AACA;AACA,SAAK,SAAL;AACE,aAAO;AAAEC,QAAAA,GAAG,EAAEV,OAAO,CAACQ,MAAM,CAACE,GAAR,CAAd;AAA4BC,QAAAA,GAAG,EAAEX,OAAO,CAACQ,MAAM,CAACG,GAAR;AAAxC,OAAP;;AACF;AACE,aAAO;AAAED,QAAAA,GAAG,EAAE,CAAC,CAAC,OAAD,EAAU,CAAV,CAAD,CAAP;AAAuBC,QAAAA,GAAG,EAAE,CAAC,CAAC,OAAD,EAAU,CAAV,CAAD;AAA5B,OAAP;AANJ;AAQD,CATD;;AAWA,MAAMC,QAAQ,GAAG,UAAUC,KAAV,EAAiB;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCnB,UAAU,CAACU,cAAD,EAAiB;AACjEI,IAAAA,GAAG,EAAE,CAAC,CAAC,UAAD,EAAa,CAAb,CAAD,CAD4D;AAEjEC,IAAAA,GAAG,EAAE,CAAC,CAAC,UAAD,EAAa,CAAb,CAAD;AAF4D,GAAjB,CAAlD;AAKA,sBACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEG,YAAY,CAACH;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEG,YAAY,CAACJ;AAApC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD,CACE;AADF;AAEE,MAAA,WAAW,EAAE,CAACC,GAAD,EAAMD,GAAN,KACXK,eAAe,CAAC;AAAEN,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,GAAnB;AAAwBC,QAAAA;AAAxB,OAAD;AAHnB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlBD;;GAAMC,Q;;KAAAA,Q;AAoBN,eAAeA,QAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport Attackers from \"./Results/Attackers\";\r\nimport Defenders from \"./Results/Defenders\";\r\nimport Logic from \"./Logic\";\r\n\r\nconst sortArr = (arr) => {\r\n  const sortedArr = arr.sort((a, b) => b[1] - a[1]);\r\n  return sortedArr;\r\n};\r\n\r\nconst resultsReducer = (_, action) => {\r\n  switch (action.type) {\r\n    // If the dispatched type is Results then\r\n    // update the results state and displays\r\n    case \"RESULTS\":\r\n      return { def: sortArr(action.def), atk: sortArr(action.atk) };\r\n    default:\r\n      return { def: [[\"ERROR\", 1]], atk: [[\"ERROR\", 1]] };\r\n  }\r\n};\r\n\r\nconst System13 = function (props) {\r\n  const [resultsState, dispatchResults] = useReducer(resultsReducer, {\r\n    def: [[\"Jane Doe\", 2]],\r\n    atk: [[\"John Doe\", 3]],\r\n  });\r\n\r\n  return (\r\n    <section className=\"result\">\r\n      <Attackers atkPlayers={resultsState.atk} />\r\n      <Defenders defPlayers={resultsState.def} />\r\n      <Logic\r\n        // Lifts the results and dispatches to Reducer\r\n        liftResults={(atk, def) =>\r\n          dispatchResults({ type: \"RESULTS\", def, atk })\r\n        }\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default System13;\r\n"]},"metadata":{},"sourceType":"module"}