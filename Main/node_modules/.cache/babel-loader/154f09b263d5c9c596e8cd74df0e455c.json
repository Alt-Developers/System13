{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jirat Chutrakul\\\\Documents\\\\GitHub\\\\System13\\\\React\\\\src\\\\components\\\\System13\\\\System13.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Attackers from \"./Results/Attackers\";\nimport Defenders from \"./Results/Defenders\";\nimport Logic from \"./Logic\";\nimport modal from \"../Layout/Modal/modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst System13 = function (props) {\n  _s();\n\n  // Modal state\n  const {\n    modalOpen,\n    close,\n    open\n  } = useModal(); // Modal type\n\n  const [modalType, setModalType] = useState(\"dropIn\");\n  const [defResults, setDefResults] = useState([[\"Jane Doe\", 2]]);\n  const [atkResults, setAtkResults] = useState([[\"John Doe\", 3]]);\n\n  const liftResultsHandler = (defResults, atkResults) => {\n    setDefResults(defResults);\n    setAtkResults(atkResults);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(Attackers, {\n      atkPlayers: atkResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Defenders, {\n      defPlayers: defResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logic, {\n      liftResults: liftResultsHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: open\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(System13, \"1ohMNS1/3loVWr1y/pOG3s5FLnA=\", true);\n\n_c = System13;\n\nconst ModalContainer = _ref => {\n  let {\n    children,\n    label\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    // Enables the animation of components that have been removed from the tree\n    _jsxDEV(AnimatePresence // Disable any initial animations on children that\n    // are present when the component is first rendered\n    , {\n      initial: false // Only render one component at a time.\n      // The exiting component will finish its exit\n      // animation before entering component is rendered\n      ,\n      exitBeforeEnter: true // Fires when all exiting nodes have completed animating out\n      ,\n      onExitComplete: () => framerLogger(label),\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }, this)\n  );\n};\n\n_c2 = ModalContainer;\nexport default System13;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"System13\");\n$RefreshReg$(_c2, \"ModalContainer\");","map":{"version":3,"sources":["C:/Users/Jirat Chutrakul/Documents/GitHub/System13/React/src/components/System13/System13.jsx"],"names":["React","useState","Attackers","Defenders","Logic","modal","System13","props","modalOpen","close","open","useModal","modalType","setModalType","defResults","setDefResults","atkResults","setAtkResults","liftResultsHandler","ModalContainer","children","label","framerLogger"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AAEA,MAAMC,QAAQ,GAAG,UAAUC,KAAV,EAAiB;AAAA;;AAChC;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BC,QAAQ,EAA3C,CAFgC,CAIhC;;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,QAAD,CAA1C;AAEA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,CAAC,CAAC,UAAD,EAAa,CAAb,CAAD,CAAD,CAA5C;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,CAAC,CAAC,UAAD,EAAa,CAAb,CAAD,CAAD,CAA5C;;AAEA,QAAMiB,kBAAkB,GAAG,CAACJ,UAAD,EAAcE,UAAd,KAA6B;AACtDD,IAAAA,aAAa,CAACD,UAAD,CAAb;AACAG,IAAAA,aAAa,CAACD,UAAD,CAAb;AACD,GAHD;;AAKA,sBACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,WAAW,EAAEI;AAApB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAER;AAAjB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAvBD;;GAAMJ,Q;;KAAAA,Q;;AAyBN,MAAMa,cAAc,GAAG;AAAA,MAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD;AAAA;AAAA;AACrB;AACA,YAAC,eAAD,CACE;AACA;AAFF;AAGE,MAAA,OAAO,EAAE,KAHX,CAIE;AACA;AACA;AANF;AAOE,MAAA,eAAe,EAAE,IAPnB,CAQE;AARF;AASE,MAAA,cAAc,EAAE,MAAMC,YAAY,CAACD,KAAD,CATpC;AAAA,gBAWGD;AAXH;AAAA;AAAA;AAAA;AAAA;AAFqB;AAAA,CAAvB;;MAAMD,c;AAiBN,eAAeb,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Attackers from \"./Results/Attackers\";\r\nimport Defenders from \"./Results/Defenders\";\r\nimport Logic from \"./Logic\";\r\nimport modal from \"../Layout/Modal/modal\";\r\n\r\nconst System13 = function (props) {\r\n  // Modal state\r\n  const { modalOpen, close, open } = useModal();\r\n\r\n  // Modal type\r\n  const [modalType, setModalType] = useState(\"dropIn\");\r\n\r\n  const [defResults, setDefResults] = useState([[\"Jane Doe\", 2]]);\r\n  const [atkResults, setAtkResults] = useState([[\"John Doe\", 3]]);\r\n\r\n  const liftResultsHandler = (defResults , atkResults) => {\r\n    setDefResults(defResults);\r\n    setAtkResults(atkResults);\r\n  }\r\n\r\n  return (\r\n    <section className=\"result\">\r\n      <Attackers atkPlayers={atkResults} />\r\n      <Defenders defPlayers={defResults} />\r\n      <Logic liftResults={liftResultsHandler}/>\r\n      <button onClick={open}></button>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst ModalContainer = ({ children, label }) => (\r\n  // Enables the animation of components that have been removed from the tree\r\n  <AnimatePresence\r\n    // Disable any initial animations on children that\r\n    // are present when the component is first rendered\r\n    initial={false}\r\n    // Only render one component at a time.\r\n    // The exiting component will finish its exit\r\n    // animation before entering component is rendered\r\n    exitBeforeEnter={true}\r\n    // Fires when all exiting nodes have completed animating out\r\n    onExitComplete={() => framerLogger(label)}\r\n  >\r\n    {children}\r\n  </AnimatePresence>\r\n);\r\n\r\nexport default System13;\r\n"]},"metadata":{},"sourceType":"module"}