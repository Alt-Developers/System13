{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jirat Chutrakul\\\\Documents\\\\GitHub\\\\System13\\\\Main\\\\src\\\\components\\\\System13\\\\Logic.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport Modal from \"../Layout/Modal.jsx\";\nimport { FullNamesList, playerList } from \"./Constants\";\nimport PlayerInput from \"./PlayerInput.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logic = props => {\n  _s();\n\n  const playerInpRef1 = useRef(\"\");\n  const playerInpRef2 = useRef(\"\");\n  const playerInpRef3 = useRef(\"\");\n  const playerInpRef4 = useRef(\"\");\n  const playerInpRef5 = useRef(\"\");\n  const playerInpRef6 = useRef(\"\");\n  const playerInpRef7 = useRef(\"\");\n  const playerInpRef8 = useRef(\"\");\n  const playerInpRef9 = useRef(\"\");\n  const playerInpRef10 = useRef(\"\");\n  const [modalVisible, setModalVisible] = useState(true);\n  const [modalText, setModalText] = useState({\n    modalH: \"Reminder\",\n    modalP: \"This program isnt perfect, this program might lag or worse crash your computer.\",\n    modalBtn: \"I Understand all of the possible consequence\"\n  });\n\n  const display = (resultArr, score) => {\n    const newScore = [];\n    const reactFormatArr = []; // Old format to [\"John Doe\", 3] format\n\n    score.forEach((_, i) => {\n      newScore.push(...score[i]);\n    }); // Changes codenames to full names\n\n    resultArr.forEach((result, i) => {\n      const fullName = playerList.hasOwnProperty(result) ? FullNamesList[result] : result;\n      reactFormatArr.push([fullName, newScore[i]]);\n    });\n    const teamPlayerAmount = reactFormatArr.length / 2;\n    const atkFreshResults = reactFormatArr.slice(0, teamPlayerAmount);\n    const defFreshResults = reactFormatArr.slice(teamPlayerAmount); // Lifts processed results to System13 component\n\n    props.liftResults(atkFreshResults, defFreshResults);\n  };\n\n  const checkScore = function (arr) {\n    const calc = [];\n    const playerPerTeam = arr.length / 2;\n    arr.forEach(cur => {\n      calc.push(playerList[cur]);\n    });\n    const attackers = calc.slice(0, playerPerTeam);\n    const defenders = calc.slice(playerPerTeam);\n    const attackerScore = attackers.reduce((acc, cur) => acc + cur);\n    const defenderScore = defenders.reduce((acc, cur) => acc + cur);\n\n    if (attackerScore === defenderScore) {\n      return [attackers, defenders];\n    } else {\n      return false;\n    }\n  };\n\n  const endl = () => {\n    console.log(\"--------------------------------\");\n  };\n\n  const boldEndl = () => {\n    console.warn(\"============================\");\n  };\n\n  const checkForImpossible = arr => {\n    console.log(\"Checking if team is possible ---\");\n    const calc = [];\n    arr.forEach(function (cur, i) {\n      calc.push(playerList[cur]);\n    }); // Does player exist?\n\n    let err3 = false;\n    calc.forEach(cur => {\n      if (cur === undefined) {\n        console.log(\"‚ùå : This player doesnt exist\");\n        err3 = \"err3\";\n      } else {\n        console.log(\"‚úÖ : This player exist\");\n      }\n    });\n\n    if (err3) {\n      endl();\n      console.info(\"üóÇ : Troubleshooted Code [err3]\");\n      return \"err3\";\n    } // Are players odd?\n\n\n    if (calc.length % 2 === 0) {\n      console.log(\"‚úÖ : Players amount arent odd\");\n    } else {\n      console.log(\"‚ùå : Players amount are odd\");\n      endl();\n      console.info(\"üóÇ : Troubleshooted Code [err0]\");\n      return \"err0\";\n    } // Are tier scores odd?\n\n\n    if (calc.reduce((acc, cur) => acc + cur) % 2 === 0) {\n      console.log(\"‚úÖ : Tiers add up to even\");\n    } else {\n      console.log(\"‚ùå : Tiers add up to odd\");\n      endl();\n      console.info(\"üóÇ : Troubleshooted Code [err1]\");\n      return \"err1\";\n    }\n\n    const scoreExisted = [];\n    const timesExisted = [];\n    let err4 = false;\n    scoreExisted.push(calc[0]);\n    timesExisted.push([calc[0], 0]);\n    calc.forEach(score => {\n      if (scoreExisted.includes(score)) {\n        let whereExisted = scoreExisted.indexOf(score);\n        timesExisted[whereExisted][1]++;\n      } else {\n        scoreExisted.push(score);\n        timesExisted.push([score, 1]);\n      }\n    });\n    timesExisted.forEach(exsisted => {\n      if (exsisted[1] % 2 !== 0) {\n        console.log(\"‚ùå : Odd amount of tier(s)\");\n        console.info(\"üóÇ : Troubleshooted Code [err4]\");\n        err4 = true;\n      } else {\n        console.log(\"‚úÖ : Even amount of tier(s)\");\n      }\n    });\n    if (err4) return \"err4\";\n\n    if (calc.length === 2) {\n      // 2 players are not a match\n      if (calc[0] !== calc[1]) {\n        console.log(\"‚ùå : 2 players are not a match\");\n        endl();\n        console.info(\"üóÇ : Troubleshooted Code [err2]\");\n        return \"err2\";\n      } else {\n        console.log(\"‚úÖ : These 2 players are a match\");\n      }\n    } else {\n      console.log(\"üîé : There's more than 2 players\");\n    }\n\n    console.info(\"‚úÖ : Passed all tests!\");\n    endl();\n  };\n\n  const randomizer = function (array) {\n    let currentIndex = array.length,\n        randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  };\n\n  const main = function (players) {\n    let finishedEqulazing = false;\n    let timesEqualized = 0;\n    let processingPlayers;\n    let checkForError = checkForImpossible(players);\n\n    if (checkForError === \"err1\") {\n      setModalText({\n        modalH: \"Sum of tiers are odd\",\n        modalP: \"This team is an imposible team , please try a new team\",\n        modalBtn: \"Try agian?\"\n      });\n      setModalVisible(true);\n      return false;\n    } else if (checkForError === \"err2\") {\n      setModalText({\n        modalH: \"These 2 players are not a match\",\n        modalP: \"This team is an imposible team , please try a new team\",\n        modalBtn: \"Try agian?\"\n      });\n      setModalVisible(true);\n      return false;\n    } else if (checkForError === \"err0\") {\n      setModalText({\n        modalH: \"Odd amount of players\",\n        modalP: \"For system13 to randomize the team players needs to be even\",\n        modalBtn: \"Try agian?\"\n      });\n      setModalVisible(true);\n      return false;\n    } else if (checkForError === \"err3\") {\n      setModalText({\n        modalH: \"Player dosen't exist!\",\n        modalP: \"Seems like you mispelled or that player isnt registered in the database\",\n        modalBtn: \"Try agian?\"\n      });\n      setModalVisible(true);\n      return false;\n    } else if (checkForError === \"err4\") {\n      setModalText({\n        modalH: \"Odd amount of tiers\",\n        modalP: \"Apparently this team cant be randomized\",\n        modalBtn: \"Try agian?\"\n      });\n      setModalVisible(true);\n      return false;\n    }\n\n    while (finishedEqulazing === false && timesEqualized <= 200) {\n      processingPlayers = randomizer(players);\n      finishedEqulazing = checkScore(processingPlayers);\n      timesEqualized++;\n    }\n\n    console.info(`Found a perfect team with ${timesEqualized} ${timesEqualized === 1 ? \"iteration\" : \"iterations\"}.`);\n    display(processingPlayers, finishedEqulazing);\n  };\n\n  const startSystem = event => {\n    event.preventDefault();\n    console.clear();\n    boldEndl();\n    const players = [playerInpRef1.current.value, playerInpRef2.current.value, playerInpRef3.current.value, playerInpRef4.current.value, playerInpRef5.current.value, playerInpRef6.current.value, playerInpRef7.current.value, playerInpRef8.current.value, playerInpRef9.current.value, playerInpRef10.current.value].filter(player => player !== \"\").map(player => player.trim().replaceAll(\" \", \"\").toUpperCase().slice(0, 3));\n\n    if (players.length === 0) {\n      setModalText({\n        modalH: \"No players?\",\n        modalP: \"System13 can't randomize a team without players\",\n        modalBtn: \"Okay...\"\n      });\n      setModalVisible(true);\n    } else {\n      main(players);\n    }\n\n    boldEndl();\n  };\n\n  const liftingModalVisible = useCallback(() => {\n    setModalVisible(false);\n  }, []);\n  useEffect(() => {\n    const defInput = boldEndl();\n  }, []);\n\n  const playerInputs = quantity => {\n    const inputsArr = [];\n\n    for (let inputIndex = 1; inputIndex <= quantity; inputIndex++) {\n      inputsArr.push( /*#__PURE__*/_jsxDEV(PlayerInput, {\n        ref: `playerInputRef${inputIndex}`,\n        placeholder: `Player ${inputIndex}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this));\n    }\n\n    return inputsArr;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"start__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start__text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to System13\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"To start input all players that are playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Not all fields need to be filled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"start__form\",\n      onSubmit: startSystem,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start__form--left\",\n        children: playerInputs(5).map(cur => cur)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start__form--right\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 6\",\n          ref: playerInpRef6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 7\",\n          ref: playerInpRef7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 8\",\n          ref: playerInpRef8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 9\",\n          ref: playerInpRef9\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__start--Player-input\",\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Player 10\",\n          ref: playerInpRef10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit__form--start dark-btn btn\",\n        children: \"Start the randomization!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      liftingModalCancle: liftingModalVisible,\n      isVisible: modalVisible,\n      modalBtn: modalText.modalBtn,\n      modalH: modalText.modalH,\n      modalP: modalText.modalP\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logic, \"myB9WQW16fz/nLBDXA9dq+N6Q10=\");\n\n_c = Logic;\nexport default Logic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logic\");","map":{"version":3,"sources":["C:/Users/Jirat Chutrakul/Documents/GitHub/System13/Main/src/components/System13/Logic.jsx"],"names":["React","useState","useRef","useEffect","useCallback","Modal","FullNamesList","playerList","PlayerInput","Logic","props","playerInpRef1","playerInpRef2","playerInpRef3","playerInpRef4","playerInpRef5","playerInpRef6","playerInpRef7","playerInpRef8","playerInpRef9","playerInpRef10","modalVisible","setModalVisible","modalText","setModalText","modalH","modalP","modalBtn","display","resultArr","score","newScore","reactFormatArr","forEach","_","i","push","result","fullName","hasOwnProperty","teamPlayerAmount","length","atkFreshResults","slice","defFreshResults","liftResults","checkScore","arr","calc","playerPerTeam","cur","attackers","defenders","attackerScore","reduce","acc","defenderScore","endl","console","log","boldEndl","warn","checkForImpossible","err3","undefined","info","scoreExisted","timesExisted","err4","includes","whereExisted","indexOf","exsisted","randomizer","array","currentIndex","randomIndex","Math","floor","random","main","players","finishedEqulazing","timesEqualized","processingPlayers","checkForError","startSystem","event","preventDefault","clear","current","value","filter","player","map","trim","replaceAll","toUpperCase","liftingModalVisible","defInput","playerInputs","quantity","inputsArr","inputIndex"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport Modal from \"../Layout/Modal.jsx\";\r\nimport { FullNamesList, playerList } from \"./Constants\";\r\nimport PlayerInput from \"./PlayerInput.jsx\";\r\n\r\nconst Logic = (props) => {\r\n  const playerInpRef1 = useRef(\"\");\r\n  const playerInpRef2 = useRef(\"\");\r\n  const playerInpRef3 = useRef(\"\");\r\n  const playerInpRef4 = useRef(\"\");\r\n  const playerInpRef5 = useRef(\"\");\r\n  const playerInpRef6 = useRef(\"\");\r\n  const playerInpRef7 = useRef(\"\");\r\n  const playerInpRef8 = useRef(\"\");\r\n  const playerInpRef9 = useRef(\"\");\r\n  const playerInpRef10 = useRef(\"\");\r\n\r\n  const [modalVisible, setModalVisible] = useState(true);\r\n  const [modalText, setModalText] = useState({\r\n    modalH: \"Reminder\",\r\n    modalP:\r\n      \"This program isnt perfect, this program might lag or worse crash your computer.\",\r\n    modalBtn: \"I Understand all of the possible consequence\",\r\n  });\r\n\r\n  const display = (resultArr, score) => {\r\n    const newScore = [];\r\n    const reactFormatArr = [];\r\n\r\n    // Old format to [\"John Doe\", 3] format\r\n    score.forEach((_, i) => {\r\n      newScore.push(...score[i]);\r\n    });\r\n    // Changes codenames to full names\r\n    resultArr.forEach((result, i) => {\r\n      const fullName = playerList.hasOwnProperty(result)\r\n        ? FullNamesList[result]\r\n        : result;\r\n      reactFormatArr.push([fullName, newScore[i]]);\r\n    });\r\n\r\n    const teamPlayerAmount = reactFormatArr.length / 2;\r\n    const atkFreshResults = reactFormatArr.slice(0, teamPlayerAmount);\r\n    const defFreshResults = reactFormatArr.slice(teamPlayerAmount);\r\n\r\n    // Lifts processed results to System13 component\r\n    props.liftResults(atkFreshResults, defFreshResults);\r\n  };\r\n\r\n  const checkScore = function (arr) {\r\n    const calc = [];\r\n    const playerPerTeam = arr.length / 2;\r\n    arr.forEach((cur) => {\r\n      calc.push(playerList[cur]);\r\n    });\r\n\r\n    const attackers = calc.slice(0, playerPerTeam);\r\n    const defenders = calc.slice(playerPerTeam);\r\n    const attackerScore = attackers.reduce((acc, cur) => acc + cur);\r\n    const defenderScore = defenders.reduce((acc, cur) => acc + cur);\r\n    if (attackerScore === defenderScore) {\r\n      return [attackers, defenders];\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const endl = () => {\r\n    console.log(\"--------------------------------\");\r\n  };\r\n  const boldEndl = () => {\r\n    console.warn(\"============================\");\r\n  };\r\n\r\n  const checkForImpossible = (arr) => {\r\n    console.log(\"Checking if team is possible ---\");\r\n    const calc = [];\r\n    arr.forEach(function (cur, i) {\r\n      calc.push(playerList[cur]);\r\n    });\r\n\r\n    // Does player exist?\r\n    let err3 = false;\r\n    calc.forEach((cur) => {\r\n      if (cur === undefined) {\r\n        console.log(\"‚ùå : This player doesnt exist\");\r\n        err3 = \"err3\";\r\n      } else {\r\n        console.log(\"‚úÖ : This player exist\");\r\n      }\r\n    });\r\n    if (err3) {\r\n      endl();\r\n      console.info(\"üóÇ : Troubleshooted Code [err3]\");\r\n      return \"err3\";\r\n    }\r\n\r\n    // Are players odd?\r\n    if (calc.length % 2 === 0) {\r\n      console.log(\"‚úÖ : Players amount arent odd\");\r\n    } else {\r\n      console.log(\"‚ùå : Players amount are odd\");\r\n      endl();\r\n      console.info(\"üóÇ : Troubleshooted Code [err0]\");\r\n      return \"err0\";\r\n    }\r\n\r\n    // Are tier scores odd?\r\n    if (calc.reduce((acc, cur) => acc + cur) % 2 === 0) {\r\n      console.log(\"‚úÖ : Tiers add up to even\");\r\n    } else {\r\n      console.log(\"‚ùå : Tiers add up to odd\");\r\n      endl();\r\n      console.info(\"üóÇ : Troubleshooted Code [err1]\");\r\n      return \"err1\";\r\n    }\r\n\r\n    const scoreExisted = [];\r\n    const timesExisted = [];\r\n    let err4 = false;\r\n    scoreExisted.push(calc[0]);\r\n    timesExisted.push([calc[0], 0]);\r\n    calc.forEach((score) => {\r\n      if (scoreExisted.includes(score)) {\r\n        let whereExisted = scoreExisted.indexOf(score);\r\n        timesExisted[whereExisted][1]++;\r\n      } else {\r\n        scoreExisted.push(score);\r\n        timesExisted.push([score, 1]);\r\n      }\r\n    });\r\n    timesExisted.forEach((exsisted) => {\r\n      if (exsisted[1] % 2 !== 0) {\r\n        console.log(\"‚ùå : Odd amount of tier(s)\");\r\n        console.info(\"üóÇ : Troubleshooted Code [err4]\");\r\n        err4 = true;\r\n      } else {\r\n        console.log(\"‚úÖ : Even amount of tier(s)\");\r\n      }\r\n    });\r\n    if (err4) return \"err4\";\r\n\r\n    if (calc.length === 2) {\r\n      // 2 players are not a match\r\n      if (calc[0] !== calc[1]) {\r\n        console.log(\"‚ùå : 2 players are not a match\");\r\n        endl();\r\n        console.info(\"üóÇ : Troubleshooted Code [err2]\");\r\n        return \"err2\";\r\n      } else {\r\n        console.log(\"‚úÖ : These 2 players are a match\");\r\n      }\r\n    } else {\r\n      console.log(\"üîé : There's more than 2 players\");\r\n    }\r\n\r\n    console.info(\"‚úÖ : Passed all tests!\");\r\n    endl();\r\n  };\r\n\r\n  const randomizer = function (array) {\r\n    let currentIndex = array.length,\r\n      randomIndex;\r\n    while (currentIndex !== 0) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex],\r\n      ];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const main = function (players) {\r\n    let finishedEqulazing = false;\r\n    let timesEqualized = 0;\r\n    let processingPlayers;\r\n    let checkForError = checkForImpossible(players);\r\n\r\n    if (checkForError === \"err1\") {\r\n      setModalText({\r\n        modalH: \"Sum of tiers are odd\",\r\n        modalP: \"This team is an imposible team , please try a new team\",\r\n        modalBtn: \"Try agian?\",\r\n      });\r\n      setModalVisible(true);\r\n      return false;\r\n    } else if (checkForError === \"err2\") {\r\n      setModalText({\r\n        modalH: \"These 2 players are not a match\",\r\n        modalP: \"This team is an imposible team , please try a new team\",\r\n        modalBtn: \"Try agian?\",\r\n      });\r\n      setModalVisible(true);\r\n      return false;\r\n    } else if (checkForError === \"err0\") {\r\n      setModalText({\r\n        modalH: \"Odd amount of players\",\r\n        modalP: \"For system13 to randomize the team players needs to be even\",\r\n        modalBtn: \"Try agian?\",\r\n      });\r\n      setModalVisible(true);\r\n      return false;\r\n    } else if (checkForError === \"err3\") {\r\n      setModalText({\r\n        modalH: \"Player dosen't exist!\",\r\n        modalP:\r\n          \"Seems like you mispelled or that player isnt registered in the database\",\r\n        modalBtn: \"Try agian?\",\r\n      });\r\n      setModalVisible(true);\r\n      return false;\r\n    } else if (checkForError === \"err4\") {\r\n      setModalText({\r\n        modalH: \"Odd amount of tiers\",\r\n        modalP: \"Apparently this team cant be randomized\",\r\n        modalBtn: \"Try agian?\",\r\n      });\r\n      setModalVisible(true);\r\n      return false;\r\n    }\r\n    while (finishedEqulazing === false && timesEqualized <= 200) {\r\n      processingPlayers = randomizer(players);\r\n      finishedEqulazing = checkScore(processingPlayers);\r\n      timesEqualized++;\r\n    }\r\n    console.info(\r\n      `Found a perfect team with ${timesEqualized} ${\r\n        timesEqualized === 1 ? \"iteration\" : \"iterations\"\r\n      }.`\r\n    );\r\n    display(processingPlayers, finishedEqulazing);\r\n  };\r\n\r\n  const startSystem = (event) => {\r\n    event.preventDefault();\r\n    console.clear();\r\n    boldEndl();\r\n    const players = [\r\n      playerInpRef1.current.value,\r\n      playerInpRef2.current.value,\r\n      playerInpRef3.current.value,\r\n      playerInpRef4.current.value,\r\n      playerInpRef5.current.value,\r\n      playerInpRef6.current.value,\r\n      playerInpRef7.current.value,\r\n      playerInpRef8.current.value,\r\n      playerInpRef9.current.value,\r\n      playerInpRef10.current.value,\r\n    ]\r\n      .filter((player) => player !== \"\")\r\n      .map((player) =>\r\n        player.trim().replaceAll(\" \", \"\").toUpperCase().slice(0, 3)\r\n      );\r\n\r\n    if (players.length === 0) {\r\n      setModalText({\r\n        modalH: \"No players?\",\r\n        modalP: \"System13 can't randomize a team without players\",\r\n        modalBtn: \"Okay...\",\r\n      });\r\n      setModalVisible(true);\r\n    } else {\r\n      main(players);\r\n    }\r\n    boldEndl();\r\n  };\r\n\r\n  const liftingModalVisible = useCallback(() => {\r\n    setModalVisible(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const defInput = boldEndl();\r\n  }, []);\r\n\r\n  const playerInputs = (quantity) => {\r\n    const inputsArr = [];\r\n    for (let inputIndex = 1; inputIndex <= quantity; inputIndex++) {\r\n      inputsArr.push(\r\n        <PlayerInput\r\n          ref={`playerInputRef${inputIndex}`}\r\n          placeholder={`Player ${inputIndex}`}\r\n        />\r\n      );\r\n    }\r\n    return inputsArr;\r\n  };\r\n\r\n  return (\r\n    <div className=\"start__wrapper\">\r\n      <div className=\"start__text\">\r\n        <h1>Welcome to System13</h1>\r\n        <p>To start input all players that are playing</p>\r\n        <p>Not all fields need to be filled</p>\r\n      </div>\r\n\r\n      <form className=\"start__form\" onSubmit={startSystem}>\r\n        <div className=\"start__form--left\">\r\n          {playerInputs(5).map((cur) => cur)}\r\n        </div>\r\n        <div className=\"start__form--right\">\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 6\"\r\n            ref={playerInpRef6}\r\n          />\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 7\"\r\n            ref={playerInpRef7}\r\n          />\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 8\"\r\n            ref={playerInpRef8}\r\n          />\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 9\"\r\n            ref={playerInpRef9}\r\n          />\r\n          <input\r\n            className=\"form__start--Player-input\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Player 10\"\r\n            ref={playerInpRef10}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"submit__form--start dark-btn btn\">\r\n          Start the randomization!\r\n        </button>\r\n      </form>\r\n      <Modal\r\n        liftingModalCancle={liftingModalVisible}\r\n        isVisible={modalVisible}\r\n        modalBtn={modalText.modalBtn}\r\n        modalH={modalText.modalH}\r\n        modalP={modalText.modalP}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logic;\r\n"]},"metadata":{},"sourceType":"module"}